interface ViewModel {
  /**
   * Displays content based on the current system language and a path of the language resource key specified through $t.
   * @param path Path of the language resource key
   * @param param Content used to replace placeholders during runtime. There are two types of placeholders available:
   *              1. Named placeholder, for example, {name}. The actual content must be of the object type, for example, $t('strings.object', {name: 'HarmonyOS'}).
   *              2. Digit placeholder, for example, {0}. The actual content must be of the array type, for example, $t('strings.array', ['HarmonyOS']).
   */
  $t(path: string, param: object | Array<any>): void;
}

interface Options<T extends ViewModel, Data = DefaultData<T>> {
  data?: Data;

  /**
   * Called when the page is initialized. This function can be called only once in a lifecycle.
   */
  onInit?(): void;

  /**
   * Called when the page is created. This function can be called only once in a lifecycle.
   */
  onReady?(): void;

  /**
   * Called when the page is displayed.
   */
  onShow?(): void;

  /**
   * Called when the application is created
   */
  onCreate?(): void;

  /**
   * Called when the application is destroyed or called when the page is redirected to another one (without entering the navigation stack).
   */
  onDestroy?(): void;
}

type DefaultData<T> = object;
type CombinedOptions<T extends ViewModel, Data> = object &
  Options<T, Data> &
  ThisType<T & ViewModel & Data>;
export declare function extendViewModel<T extends ViewModel, Data>(
  options: CombinedOptions<T, Data>
): T;
